"""Make base date_modified possible to be nullable

Revision ID: e98b83eec170
Revises: 000fe1791dce
Create Date: 2023-09-22 22:29:31.737811

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e98b83eec170'
down_revision = '000fe1791dce'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('drinks', 'date_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ingredient_needed', 'date_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('ingredient_storage', 'date_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('users', 'date_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'date_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ingredient_storage', 'date_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('ingredient_needed', 'date_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.alter_column('drinks', 'date_modified',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    # ### end Alembic commands ###
