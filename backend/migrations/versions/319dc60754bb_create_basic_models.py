"""create basic models

Revision ID: 319dc60754bb
Revises: 
Create Date: 2023-11-29 20:43:21.749122

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '319dc60754bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('drinks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('complicated', sa.Enum('EASY', 'MEDIUM', 'HARD', name='complicatedlevels'), nullable=False),
    sa.Column('drink_type', sa.Enum('ONE_SHOT', 'MULTIPLE_SHOT', 'DRINK', name='drinktypes'), nullable=False),
    sa.Column('preparation_description', sa.String(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('with_alcohol', sa.Boolean(), nullable=True),
    sa.Column('is_possible_to_make', sa.Boolean(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_drinks_id'), 'drinks', ['id'], unique=False)
    op.create_index(op.f('ix_drinks_name'), 'drinks', ['name'], unique=True)
    op.create_table('ingredients_storage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('ingredient_type', sa.Enum('LIQUID', 'BEER', 'FRUIT', 'VEGETABLE', 'SNACK', 'OTHER', name='ingredienttypes'), nullable=False),
    sa.Column('ingredient_unit', sa.Enum('MILLILITER', 'PIECE', 'PACK', name='ingredientunits'), nullable=False),
    sa.Column('storage_amount', sa.Integer(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('with_alcohol', sa.Boolean(), nullable=True),
    sa.Column('can_be_ordered', sa.Boolean(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ingredients_storage_id'), 'ingredients_storage', ['id'], unique=False)
    op.create_index(op.f('ix_ingredients_storage_name'), 'ingredients_storage', ['name'], unique=True)
    op.create_table('users',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=True),
    sa.Column('table', sa.String(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=False)
    op.create_table('bar_orders',
    sa.Column('uuid', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('CREATED', 'ACCEPTED', 'IN_PROGRESS', 'COMPLETED', 'REJECTED', 'CANCELED', name='orderstatus'), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('drink_id', sa.Integer(), nullable=True),
    sa.Column('storage_order_id', sa.Integer(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['drink_id'], ['drinks.id'], ),
    sa.ForeignKeyConstraint(['storage_order_id'], ['ingredients_storage.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_bar_orders_uuid'), 'bar_orders', ['uuid'], unique=False)
    op.create_table('ingredients_needed',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount_needed', sa.Integer(), nullable=False),
    sa.Column('is_enough_to_make_a_drink', sa.Boolean(), nullable=True),
    sa.Column('drink_id', sa.Integer(), nullable=False),
    sa.Column('ingredient_storage_id', sa.Integer(), nullable=True),
    sa.Column('date_creation', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['drink_id'], ['drinks.id'], ),
    sa.ForeignKeyConstraint(['ingredient_storage_id'], ['ingredients_storage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ingredients_needed_id'), 'ingredients_needed', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ingredients_needed_id'), table_name='ingredients_needed')
    op.drop_table('ingredients_needed')
    op.drop_index(op.f('ix_bar_orders_uuid'), table_name='bar_orders')
    op.drop_table('bar_orders')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_ingredients_storage_name'), table_name='ingredients_storage')
    op.drop_index(op.f('ix_ingredients_storage_id'), table_name='ingredients_storage')
    op.drop_table('ingredients_storage')
    op.drop_index(op.f('ix_drinks_name'), table_name='drinks')
    op.drop_index(op.f('ix_drinks_id'), table_name='drinks')
    op.drop_table('drinks')
    # ### end Alembic commands ###
